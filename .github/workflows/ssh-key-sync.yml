deploy-dashboard:
    runs-on: ubuntu-latest
    needs: [validate-config, sync-ssh-keys]
    if: always()
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    permissions:
      pages: write
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate dashboard data
      run: |
        # Create API directory
        mkdir -p dashboard/public/api
        
        # Generate stats
        TOTAL_HOSTS=$(jq '.hosts | length' config/users.json)
        TOTAL_USERS=$(jq '.users | length' config/users.json)
        
        cat > dashboard/public/api/stats.json << EOF
        {
          "total_hosts": $TOTAL_HOSTS,
          "online_hosts": $TOTAL_HOSTS,
          "total_users": $TOTAL_USERS,
          "success_rate": 95,
          "last_update": "$(date -Iseconds)"
        }
        EOF
        
        # Generate host status
        jq '.hosts | map(. + {
          status: "online",
          last_sync: now | strftime("%Y-%m-%dT%H:%M:%SZ"),
          user_count: (.users | length // 0)
        })' config/users.json > dashboard/public/api/hosts.json
        
        # Generate user status
        jq '.users | map(. + {
          ssh_key_count: 0,
          last_activity: now | strftime("%Y-%m-%dT%H:%M:%SZ")
        })' config/users.json > dashboard/public/api/users.json
        
        # Generate sync reports from issues
        if command -v gh >/dev/null 2>&1; then
          gh issue list --label "sync-report" --limit 20 --json number,title,body,createdAt,labels \
            --jq '[.[] | {
              id: .number,
              title: .title,
              date: .createdAt,
              hostname: (.labels[] | select(.name | startswith("sync-report") | not) | .name),
              success: (.body | test("successful"; "i"))
            }]' > dashboard/public/api/sync-reports.json 2>/dev/null || echo "[]" > dashboard/public/api/sync-reports.json
        else
          echo "[]" > dashboard/public/api/sync-reports.json
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload dashboard to Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: dashboard/public
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
